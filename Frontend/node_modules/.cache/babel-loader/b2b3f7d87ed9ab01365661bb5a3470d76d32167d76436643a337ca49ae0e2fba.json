{"ast":null,"code":"import { put, takeEvery, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { setSearchResults, setErrorMessage } from \"./homeState\";\nfunction extractVideoId(url) {\n  const regex = /^(?:https?:\\/\\/)?(?:www\\.)?(?:m\\.)?(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:watch\\?|v|e(?:mbed)?)\\/|\\S*?[?&]v=|live\\/|shorts\\/)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n  // /^(?:https?:\\/\\/)?(?:www\\.)?(?:m\\.)?(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:watch\\?|v|e(?:mbed)?)\\/|\\S*?[?&]v=|live\\/)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n  const match = url.match(regex);\n  return match ? match[1] : null;\n}\nfunction* handleSearchSubmit(action) {\n  try {\n    const {\n      searchQuery\n    } = action.payload;\n    const API_KEYS = [\"AIzaSyBfE7oaat7qJeMw4BvcKfy54FP4sBU-YTk\", \"AIzaSyDXyPEM65vKoGhdVGWGuSrE4xJWMVZEtxw\", \"AIzaSyD3KFJ4FAEAqd-ABPRyZvUCqGAn-74b1qg\"];\n    let keyIndex = sessionStorage.getItem(\"keyIndex\") || 0;\n    // const params = new URLSearchParams(new URL(searchQuery).search);\n    const videoId = extractVideoId(searchQuery);\n    sessionStorage.setItem(\"videoId\", videoId);\n    const response = yield axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&id=${videoId}&key=${API_KEYS[keyIndex]}`);\n    if (response.data.items.length === 0) {\n      yield put(setErrorMessage(\"Please enter a valid YouTube video URL.\"));\n    } else {\n      yield put(setSearchResults(response.data.items[0]));\n    }\n    // Rotate the API key for the next request\n    keyIndex = (keyIndex + 1) % API_KEYS.length;\n    sessionStorage.setItem(\"keyIndex\", keyIndex);\n  } catch (error) {\n    setErrorMessage(\"Please enter a valid YouTube video URL.\");\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(\"home/getSearchResults\", handleSearchSubmit)]);\n}","map":{"version":3,"names":["put","takeEvery","all","axios","setSearchResults","setErrorMessage","extractVideoId","url","regex","match","handleSearchSubmit","action","searchQuery","payload","API_KEYS","keyIndex","sessionStorage","getItem","videoId","setItem","response","get","data","items","length","error","rootSaga"],"sources":["C:/Users/Max4vich/Desktop/freelance/thumbnail_downloader/Frontend/src/redux/home/saga.js"],"sourcesContent":["import { put, takeEvery, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { setSearchResults, setErrorMessage } from \"./homeState\";\r\n\r\nfunction extractVideoId(url) {\r\n  const regex =\r\n    /^(?:https?:\\/\\/)?(?:www\\.)?(?:m\\.)?(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:watch\\?|v|e(?:mbed)?)\\/|\\S*?[?&]v=|live\\/|shorts\\/)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\r\n  // /^(?:https?:\\/\\/)?(?:www\\.)?(?:m\\.)?(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:watch\\?|v|e(?:mbed)?)\\/|\\S*?[?&]v=|live\\/)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\r\n  const match = url.match(regex);\r\n  return match ? match[1] : null;\r\n}\r\n\r\nfunction* handleSearchSubmit(action) {\r\n  try {\r\n    const { searchQuery } = action.payload;\r\n    const API_KEYS = [\r\n      \"AIzaSyBfE7oaat7qJeMw4BvcKfy54FP4sBU-YTk\",\r\n      \"AIzaSyDXyPEM65vKoGhdVGWGuSrE4xJWMVZEtxw\",\r\n      \"AIzaSyD3KFJ4FAEAqd-ABPRyZvUCqGAn-74b1qg\",\r\n    ];\r\n    let keyIndex = sessionStorage.getItem(\"keyIndex\") || 0;\r\n    // const params = new URLSearchParams(new URL(searchQuery).search);\r\n    const videoId = extractVideoId(searchQuery);\r\n\r\n    sessionStorage.setItem(\"videoId\", videoId);\r\n    const response = yield axios.get(\r\n      `https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&id=${videoId}&key=${API_KEYS[keyIndex]}`\r\n    );\r\n    if (response.data.items.length === 0) {\r\n      yield put(setErrorMessage(\"Please enter a valid YouTube video URL.\"));\r\n    } else {\r\n      yield put(setSearchResults(response.data.items[0]));\r\n    }\r\n    // Rotate the API key for the next request\r\n    keyIndex = (keyIndex + 1) % API_KEYS.length;\r\n    sessionStorage.setItem(\"keyIndex\", keyIndex);\r\n  } catch (error) {\r\n    setErrorMessage(\"Please enter a valid YouTube video URL.\");\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([takeEvery(\"home/getSearchResults\", handleSearchSubmit)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,aAAa;AAE/D,SAASC,cAAcA,CAACC,GAAG,EAAE;EAC3B,MAAMC,KAAK,GACT,+KAA+K;EACjL;EACA,MAAMC,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACD,KAAK,CAAC;EAC9B,OAAOC,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAChC;AAEA,UAAUC,kBAAkBA,CAACC,MAAM,EAAE;EACnC,IAAI;IACF,MAAM;MAAEC;IAAY,CAAC,GAAGD,MAAM,CAACE,OAAO;IACtC,MAAMC,QAAQ,GAAG,CACf,yCAAyC,EACzC,yCAAyC,EACzC,yCAAyC,CAC1C;IACD,IAAIC,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;IACtD;IACA,MAAMC,OAAO,GAAGZ,cAAc,CAACM,WAAW,CAAC;IAE3CI,cAAc,CAACG,OAAO,CAAC,SAAS,EAAED,OAAO,CAAC;IAC1C,MAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC7B,2EAA0EH,OAAQ,QAAOJ,QAAQ,CAACC,QAAQ,CAAE,EAC/G,CAAC;IACD,IAAIK,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACpC,MAAMxB,GAAG,CAACK,eAAe,CAAC,yCAAyC,CAAC,CAAC;IACvE,CAAC,MAAM;MACL,MAAML,GAAG,CAACI,gBAAgB,CAACgB,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD;IACA;IACAR,QAAQ,GAAG,CAACA,QAAQ,GAAG,CAAC,IAAID,QAAQ,CAACU,MAAM;IAC3CR,cAAc,CAACG,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EAC9C,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdpB,eAAe,CAAC,yCAAyC,CAAC;EAC5D;AACF;AAEA,eAAe,UAAUqB,QAAQA,CAAA,EAAG;EAClC,MAAMxB,GAAG,CAAC,CAACD,SAAS,CAAC,uBAAuB,EAAES,kBAAkB,CAAC,CAAC,CAAC;AACrE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}